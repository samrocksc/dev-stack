---
services:
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - backend
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "admin"
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  mongo:
    container_name: mongodb
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_DATABASE: mongodb
    ports:
      - "27017-27019:27017-27019"
    networks:
      - backend
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=9411
      - COLLECTOR_OTLP_ENABLED=true
    volumes:
      - jaeger-data:/tmp
    networks:
      - backend
    restart: unless-stopped
  tempo:
    image: grafana/tempo:latest
    command: ["-config.file=/etc/tempo.yaml"]
    user: "0:0" # Run as root to avoid permission issues
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo.yaml
      - tempo-data:/tmp/tempo
    ports:
      - "3100:3100" # tempo
      - "3200:3200" # tempo
      - "4317:4317" # otlp grpc
      - "4318:4318" # otlp http
      - "9095:9095" # tempo grpc
      - "9411:9411" # zipkin
    networks:
      - backend
    restart: unless-stopped
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3456:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - backend
    depends_on:
      - tempo
    restart: unless-stopped
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    ports:
      - "8999:9000"
    networks:
      - backend
  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    ports:
      - "3069:8080"
    volumes:
      - open-webui:/app/backend/data
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      OLLAMA_BASE_URL: http://0.0.0.0:11434/api
    restart: always
    depends_on:
      - ollama
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    networks:
      - backend
networks:
  backend:
    driver: bridge
  postgres:
    driver: bridge
volumes:
  postgres:
  jaeger-data:
  tempo-data:
  grafana-data:
  portainer-data:
  open-webui:
  ollama_data:
